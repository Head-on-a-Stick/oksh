#!/bin/sh

# This configure script written by Brian Callahan <bcallah@openbsd.org>
# and released into the Public Domain.

cccheck() {
  if [ ! -z "$CC" ] ; then
cat << EOF > conftest.c
int main(void){return 0;}
EOF
    $CC -o conftest conftest.c > /dev/null 2>&1
    if [ $? -eq 0 ] ; then
      rm -f conftest conftest.c
      cc="$CC"
      return 0
    else
      rm -f conftest conftest.c
    fi
  fi

  for compiler in cc clang pcc xlc gcc ; do
cat << EOF > conftest.c
int main(void){return 0;}
EOF

    $compiler -o conftest conftest.c > /dev/null 2>&1

    if [ $? -eq 0 ] ; then
      rm -f conftest conftest.c
      cc="$compiler"
      return 0
    else
      rm -f conftest conftest.c
    fi
  done
  return 1
}

confstrcheck() {
  cat << EOF > conftest.c
#include <unistd.h>
int main(void){confstr(0,NULL,0);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

pledgecheck() {
  cat << EOF > conftest.c
#include <unistd.h>
int main(void){pledge(NULL,NULL);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

reallocarraycheck() {
  cat << EOF > conftest.c
#include <stdlib.h>
int main(void){reallocarray(NULL, 0, 0);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

setresgidcheck() {
  cat << EOF > conftest.c
#include <sys/types.h>
#include <unistd.h>
int main(void){setresgid(NULL, NULL, NULL);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

setresuidcheck() {
  cat << EOF > conftest.c
#include <sys/types.h>
#include <unistd.h>
int main(void){setresuid(NULL, NULL, NULL);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

siglistcheck() {
  cat << EOF > conftest.c
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
int main(void){printf("%s",sys_siglist[0]);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

signamecheck() {
  cat << EOF > conftest.c
#include <signal.h>
#include <stdio.h>
#include <unistd.h>
int main(void){printf("%s",sys_signame[0]);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

sranddeterministiccheck() {
  cat << EOF > conftest.c
#include <stdlib.h>
int main(void){srand_deterministic(0);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

stravischeck() {
  cat << EOF > conftest.c
#include <stdlib.h>
#include <vis.h>
int main(void){stravis(NULL, NULL, 0);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

strlcatcheck() {
  cat << EOF > conftest.c
#include <string.h>
int main(void){strlcat(NULL,NULL,0);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

strlcpycheck() {
  cat << EOF > conftest.c
#include <string.h>
int main(void){strlcpy(NULL,NULL,0);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

strtonumcheck() {
  cat << EOF > conftest.c
#include <stdlib.h>
int main(void){strtonum(NULL, 0, 0, NULL);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

strunvischeck() {
  cat << EOF > conftest.c
#include <stdlib.h>
#include <vis.h>
int main(void){strunvis(NULL, NULL);return 0;}
EOF
  $cc $tflags -o conftest conftest.c > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.c
    return 0
  else
    rm -f conftest conftest.c
    return 1
  fi
}

wflagcheck() {
  cat << EOF > conftest.c
int main(void){return 0;}
EOF
  $cc -w -o conftest conftest.c > /dev/null 2> conftest.err
  grep ':' conftest.err > /dev/null 2>&1
  if [ $? -eq 0 ] ; then
    rm -f conftest conftest.err conftest.c
    return 1
  else
    rm -f conftest conftest.err conftest.c
    return 0
  fi
}

if [ ! -z "$PREFIX" ] ; then
prefix="$PREFIX"
else
prefix="/usr/local"
fi

mandir="$prefix/man"

# Options.
for opt
do
  case "$opt" in
    --prefix=*)
	prefix=`echo $opt | cut -d '=' -f 2`
	;;
    --mandir=*)
	mandir=`echo $opt | cut -d '=' -f 2`
	;;
    --help|-h)
	echo "Usage: configure [options]"
	echo ""
	echo "Options:"
	printf "  --help or -h               "
	echo "Display this help message"
	printf "  --prefix=PREFIX            "
	echo "Top level install directory is PREFIX [$prefix]"
	printf "  --mandir=MANDIR            "
	echo "Manual pages are installed to MANDIR [$mandir]"
	exit 1
	;;
    *)
	;;
  esac
done

if [ ! -z "$CFLAGS" ] ; then
cflags="$CFLAGS -DEMACS -DVI"
else
cflags="-DEMACS -DVI"
fi

printf "checking for C compiler... "
cccheck
if [ $? -ne 0 ] ; then
  echo "not found"
  echo "Please install a C compiler and re-run configure."
  exit 1
else
  echo "$cc"
fi

printf "checking for -w compiler flag... "
wflagcheck
if [ $? -ne 0 ] ; then
  echo "no"
else
  cflags="$cflags -w"
  echo "yes"
fi

printf "checking for OS... "
os=`uname -s`
echo "$os"

if [ "x$os" = "xLinux" ] ; then
  cflags="$cflags -D_GNU_SOURCE"
elif [ "x$os" = "xNetBSD" ] ; then
  tflags="-D_OPENBSD_SOURCE"
  cflags="$cflags $tflags"
else
  tflags=""
fi

cat << EOF > pconfig.h
/* This file automatically generated by configure.  */

EOF

printf "checking for confstr... "
confstrcheck
if [ $? -eq 0 ] ; then
  echo "#define HAVE_CONFSTR" >> pconfig.h
  echo "yes"
else
  echo "no"
fi

printf "checking for pledge... "
pledgecheck
if [ $? -eq 0 ] ; then
  echo "#define HAVE_PLEDGE" >> pconfig.h
  echo "yes"
else
  echo "no"
fi

printf "checking for reallocarray... "
reallocarraycheck
if [ $? -eq 0 ] ; then
  echo "#define HAVE_REALLOCARRAY" >> pconfig.h
  echo "yes"
else
  echo "no"
fi

printf "checking for setresgid... "
setresgidcheck
if [ $? -eq 0 ] ; then
  echo "#define HAVE_SETRESGID" >> pconfig.h
  echo "yes"
else
  echo "no"
fi

printf "checking for setresuid... "
setresuidcheck
if [ $? -eq 0 ] ; then
  echo "#define HAVE_SETRESUID" >> pconfig.h
  echo "yes"
else
  echo "no"
fi

printf "checking for srand_deterministic... "
sranddeterministiccheck
if [ $? -eq 0 ] ; then
  echo "#define HAVE_SRAND_DETERMINISTIC" >> pconfig.h
  echo "yes"
else
  echo "no"
fi

printf "checking for stravis... "
stravischeck
if [ $? -eq 0 ] ; then
  echo "#define HAVE_STRAVIS" >> pconfig.h
  echo "yes"
else
  echo "no"
fi

printf "checking for strlcat... "
strlcatcheck
if [ $? -eq 0 ] ; then
  echo "#define HAVE_STRLCAT" >> pconfig.h
  echo "yes"
else
  echo "no"
fi

printf "checking for strlcpy... "
strlcpycheck
if [ $? -eq 0 ] ; then
  echo "#define HAVE_STRLCPY" >> pconfig.h
  echo "yes"
else
  echo "no"
fi

printf "checking for strtonum... "
strtonumcheck
if [ $? -eq 0 ] ; then
  echo "#define HAVE_STRTONUM" >> pconfig.h
  echo "yes"
else
  echo "no"
fi

printf "checking for strunvis... "
strunvischeck
if [ $? -eq 0 ] ; then
  echo "#define HAVE_STRUNVIS" >> pconfig.h
  echo "yes"
else
  echo "no"
fi

printf "checking for sys_siglist... "
siglistcheck
if [ $? -eq 0 ] ; then
  echo "#define HAVE_SIGLIST" >> pconfig.h
  echo "yes"
else
  echo "no"
fi

printf "checking for sys_signame... "
signamecheck
if [ $? -eq 0 ] ; then
  echo "#define HAVE_SIGNAME" >> pconfig.h
  echo "yes"
else
  echo "no"
fi

printf "creating Makefile... "
cat << EOF > Makefile
# This Makefile automatically generated by configure.

CC =		$cc
CFLAGS =	$cflags
PREFIX =	$prefix
MANDIR =	$mandir
PROG =		oksh

OBJS =	alloc.o c_ksh.o c_sh.o c_test.o c_ulimit.o edit.o emacs.o eval.o \\
	exec.o expr.o history.o io.o jobs.o lex.o mail.o main.o misc.o \\
	path.o shf.o syn.o table.o trap.o tree.o tty.o var.o version.o vi.o \\
	confstr.o reallocarray.o siglist.o signame.o strlcat.o strlcpy.o \\
	strtonum.o unvis.o vis.o

ETS =	\`grep -w \${PREFIX}/bin/\${PROG} /etc/shells > /dev/null; \\
	[ \$\$? -ne 0 ] && echo "\${PREFIX}/bin/\${PROG}" >> /etc/shells\`

all: \${PROG}

\${PROG}: \${OBJS}
	\${CC} \${LDFLAGS} -o \${PROG} \${OBJS}

install:
	install -c -s -m 755 \${PROG} \${PREFIX}/bin
	install -c -m 644 oksh.1 \${MANDIR}/man1/\${PROG}.1
	echo \${ETS}

test:
	echo "No tests"

clean:
	rm -f \${PROG} \${OBJS}

distclean: clean
	rm -f Makefile pconfig.h
EOF
echo "done"
